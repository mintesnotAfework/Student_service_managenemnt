services:

    # PHP Service
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - database
            # - redis

    # PHP Service
    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 6001:6001
        depends_on:
            - database
            # - redis

    # Database Server
    database:
        image: postgres:latest
        ports:
            -   5000:5432
        environment:
            - POSTGRES_DATABASE=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/postgres

    # Redis Server
    # redis:
    #     image: redis:alpine
    #     command: redis-server --appendonly yes --requirepass  "${REDIS_PASSWORD}"
    #     ports:
    #         - 6379:6379

    # Queue Server
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
            - ./:/var/www

    # Node Server
    node:
        build:
            context: .
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/src/node_modules
        tty: true

volumes:
    db-data: ~